#:import knspace kivy.uix.behaviors.knspace.knspace
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import ceil math.ceil

<StageListing@FlatSplitter>:
    size_hint_x: None
    width: '200dp'
    sizable_from: 'left'
    strip_size: '5dp'
    min_size: '15dp'
    max_size: '400dp'
    spacing: '5dp'
    flat_color: app.theme.accent
    BoxLayout:
        orientation: 'vertical'
        ScrollView:
            bar_width: '10dp'
            scroll_type: ['bars']
            do_scroll_y: False
            size_hint_y: None
            height: '38dp'
            BoxLayout:
                size_hint_min_x: self.minimum_width
                orientation: 'horizontal'
                FlatLabel:
                    text: 'Stages'
                    width: self.texture_size[0]
                    size_hint_x: None
                    flat_color: app.theme.text_primary
                Widget
                FlatImageButton:
                    scale_down_color: True
                    source: 'flat_plus.png'
                    flat_color: app.theme.accent
                    on_release: stages.add_empty_stage()
        ScrollView:
            bar_width: '10dp'
            scroll_type: ['bars']
            StageList:
                id: stages
                knsname: 'stages'
                orientation: 'vertical'
                spacing: '3dp'
                padding: '0dp', 0, 0, '12dp'
                stage_factory: app.stage_factory
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                touch_deselect_last: True
                spacer_props: {'size_hint_y': None, 'height': '40dp', 'size_hint_min_x': '40dp'}
                drag_classes: ['shape', 'shape_group', 'func', 'func_spinner', 'stage']
                drag_append_end: True
                canvas:
                    Color:
                        rgba: (152 / 255., 153 / 255., 155 / 255., 1.) if app.drag_controller.dragging and app.drag_controller.widget_dragged and app.drag_controller.widget_dragged.drag_cls in ('shape', 'shape_group', 'func', 'func_spinner', 'stage') else (0, 0, 0, 0)
                    Rectangle:
                        pos: self.pos
                        size: self.width, dp(10)


<ShapeGraphSelector@FlatToggleButton>:
    controller: None
    size_hint: None, None
    size: self.texture_size
    padding: '5dp', '5dp'
    scale_down_color: True
    flat_color: app.theme.text_primary
    flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
    on_release: self.controller._shapes_displayed_update_trigger()

<ShapeGraphSelectorAll@FlatButton>:
    controller: None
    size_hint: None, None
    size: self.texture_size
    padding: '5dp', '5dp'
    scale_down_color: True
    flat_color: app.theme.text_primary
    flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
    on_release: self.controller.apply_selection_all(self.text.lower())


<GraphSelectionBox@FlatSplitter>:
    max_size: root_selection_box.minimum_width + dp(40)
    size_hint_x: None
    min_size: '20dp'
    sizable_from: 'right'
    flat_color: app.theme.accent
    controller: None
    shape_selection_widget: shape_selection_widget
    size_hint_max_y: root_selection_box.minimum_height + shape_selection_widget.height
    ScrollView:
        bar_width: '10dp'
        scroll_type: ['bars']
        BoxLayout:
            id: root_selection_box
            orientation: 'vertical'
            size_hint_min_y: self.minimum_height
            size_hint_x: None
            width: self.minimum_width
            spacing: '5dp'
            Widget
            ScrollView:
                size_hint_min_x: shape_selection_widget.minimum_width
                do_scroll_x: False
                bar_width: '10dp'
                scroll_type: ['bars']
                size_hint_y: None
                height: shape_selection_widget.minimum_height
                GridLayout:
                    id: shape_selection_widget
                    cols: 4
                    size_hint_y: None
                    height: self.minimum_height
                    spacing: '5dp'
            GridLayout:
                cols: 4
                spacing: '5dp'
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                Widget
                ShapeGraphSelectorAll:
                    controller: root.controller
                    text: 'R'
                ShapeGraphSelectorAll:
                    controller: root.controller
                    text: 'G'
                ShapeGraphSelectorAll:
                    controller: root.controller
                    text: 'B'

<StageGraph>:
    size_hint_min_x: self.minimum_width
    size_hint_y: None
    min_size: self.minimum_height
    on_min_size: self.height = max(self.height, self.min_size)
    max_size: max(graph_root.size_hint_max_y or 0, shape_selection_box.size_hint_max_y) + dp(40)
    sizable_from: 'bottom'
    flat_color: app.theme.accent
    shape_selection_widget: shape_selection_box.shape_selection_widget
    graph: graph
    graph_labels: graph_labels
    unpinned_parent: None
    unpinned_root: None
    BoxLayout:
        id: root_box
        size_hint_min: self.minimum_size
        spacing: '5dp'
        padding: '5dp'
        GraphSelectionBox:
            id: shape_selection_box
            controller: root
        BoxLayout:
            id: graph_root
            size_hint_min: self.minimum_size
            orientation: 'vertical'
            spacing: '10dp'
            size_hint_max_y: self.minimum_height + graph_box.height
            BoxLayout:
                orientation: 'horizontal'
                size_hint_min_x: self.minimum_width
                size_hint_y: None
                height: self.minimum_height
                spacing: '5dp'
                padding: ['10dp', 0]
                Widget:
                    size_hint_y: None
                    height: '40dp'
                    TimeSliceSelection:
                        size: graph_ticks_big.view_size
                        x: self.parent.x + graph_ticks_big.view_pos[0]
                        y: self.parent.y + graph_ticks_big.view_pos[1]
                        min: root.xmin
                        max: root.xmax
                        low_val: root.view_xmin
                        high_val: root.view_xmax
                        on_low_val: root.view_xmin = self.low_val
                        on_high_val: root.view_xmax = self.high_val
                    Graph:
                        id: graph_ticks_big
                        size: self.parent.size
                        pos: self.parent.pos
                        xmin: root.xmin
                        xmax: root.xmax
                        x_ticks_major: ceil((self.xmax - self.xmin) / 5.)
                        x_grid_label: True
                        draw_border: False
                        _with_stencilbuffer: False
                        label_options: {'color': (0, 0, 0, 1)}
                FlatSizedTextInput:
                    size_hint_x: None
                    width: '50dp'
                    background_color: root.flat_color
                    input_filter: 'float'
                    on_text_validate: root.view_xmin = float(self.text)
                    text: '{:.1f}'.format(root.view_xmin)
                FlatSizedTextInput:
                    size_hint_x: None
                    width: '50dp'
                    background_color: root.flat_color
                    input_filter: 'float'
                    on_text_validate: root.view_xmax = float(self.text)
                    text: '{:.1f}'.format(root.view_xmax)
            FlatDivider:
                orientation: 'horizontal'
                color: app.theme.primary_light
            ScrollView:
                size_hint_min_x: graph_box.minimum_width
                bar_width: '10dp'
                scroll_type: ['bars']
                BoxLayout:
                    id: graph_box
                    size_hint_min_x: self.minimum_width
                    size_hint_y: None
                    height: max(max(self.minimum_height, root.n_plots_displayed * root.shape_height + (root.n_plots_displayed - 1) * root.shape_spacing), dp(20))
                    spacing: graph_ticks.view_pos[0]
                    padding: [0, 0, graph_ticks.width - graph_ticks.view_pos[0] - graph_ticks.view_size[0], 0]
                    BoxLayout:
                        id: graph_labels
                        orientation: 'vertical'
                        size_hint_x: None
                        width: self.minimum_width
                        size_hint_min_y: self.minimum_height
                    Widget:
                        id: graph
                        size_hint_min_x: '50dp'
                        on_center: root._plot_pos_update_trigger()
            Widget:
                size_hint_y: None
                height: '35dp'
                Graph:
                    id: graph_ticks
                    height: '35dp'
                    y: self.parent.y
                    width: graph_box.width - graph_labels.width
                    right: self.center and self.parent.right
                    xmin: root.view_xmin
                    xmax: root.view_xmax
                    x_ticks_major: ceil((self.xmax - self.xmin) / 5.)
                    x_grid_label: True
                    draw_border: False
                    _with_stencilbuffer: False
                    label_options: {'color': (0, 0, 0, 1)}
            FlatDivider:
                orientation: 'horizontal'
                color: app.theme.primary_light
            BoxLayout:
                size_hint: None, None
                size: self.minimum_width, '34dp'
                padding: '5dp'
                spacing: '5dp'
                FlatSpinner:
                    id: stage_spinner
                    values: sorted(app.stage_factory.stage_names.keys()) if app.stage_factory.stage_names else []
                    text_autoupdate: True
                    size_hint_x: None
                    width: self.minimum_width
                    flat_color: app.theme.text_primary
                    flat_menu_color: app.theme.accent
                    flat_drop_background_color: app.theme.primary_text
                    flat_drop_text_color: app.theme.text_primary
                    flat_border_color: app.theme.divider
                FlatSizedTextInput:
                    id: rate
                    size_hint_x: None
                    width: '40dp'
                    text: '30.'
                    hint_text: 'rate'
                    background_color: root.flat_color
                    input_filter: 'float'
                FlatImageButton:
                    source: 'flat_refresh.png'
                    flat_color: app.theme.accent
                    on_release: if stage_spinner.text: root.refresh_graph(stage_spinner.text, float(rate.text))
                    hover_text: 'refresh'
                FlatImageToggleButton:
                    source: 'flat_pin.png' if self.state == 'normal' else 'flat_pin_off.png'
                    flat_color: app.theme.accent
                    on_release: root.set_pin(self.state == 'down')
                    hover_text: 'refresh'

<StageGraphPopup@FlatModalView>:
    flat_color: app.theme.primary_text
    flat_border_color: app.theme.divider
    size_hint: None, None
    size: splitter.size
    FlatSplitter:
        id: splitter
        size_hint: None, None
        height: self.minimum_height
        min_size: self.minimum_width
        sizable_from: 'right'
        flat_color: app.theme.accent
        StageGraph:
            unpinned_parent: splitter
            unpinned_root: root
