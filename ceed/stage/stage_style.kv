#:import StageFactory ceed.stage.StageFactory
#:import FunctionFactory ceed.function.FunctionFactory

<StageListing@FlatSplitter>:
    size_hint_x: None
    width: '150dp'
    sizable_from: 'left'
    strip_size: '5dp'
    min_size: '15dp'
    max_size: '400dp'
    spacing: '5dp'
    flat_color: app.theme.accent
    BoxLayout:
        orientation: 'vertical'
        ScrollView:
            bar_width: '10dp'
            scroll_type: ['bars']
            size_hint_y: None
            height: control_box.minimum_height
            BoxLayout:
                id: control_box
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                BoxLayout:
                    size_hint_y: None
                    size_hint_min_x: self.minimum_width
                    height: '34dp'
                    spacing: '5dp'
                    FlatButton:
                        text: '+Stage'
                        size_hint: None, None
                        size: self.texture_size
                        scale_down_color: True
                        flat_color: app.theme.text_primary
                        padding: '5dp', '5dp'
                        flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
                        on_release: stages.add_stage()
                    FlatButton:
                        text: '+Groups'
                        size_hint: None, None
                        size: self.texture_size
                        scale_down_color: True
                        flat_color: app.theme.text_primary
                        padding: '5dp', '5dp'
                        flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
                        on_release: stages.add_selected_shape_groups()
                    FlatButton:
                        text: '+Shapes'
                        size_hint: None, None
                        size: self.texture_size
                        scale_down_color: True
                        flat_color: app.theme.text_primary
                        padding: '5dp', '5dp'
                        flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
                        on_release: stages.add_selected_shapes()
                BoxLayout:
                    size_hint_y: None
                    height: '34dp'
                    padding: '5dp'
                    spacing: '5dp'
                    size_hint_min_x: self.minimum_width
                    FlatSpinner:
                        id: shape_spin
                        values: sorted(list(knspace.painter.shape_names.keys()) + list(knspace.painter.shape_group_names.keys())) if knspace.painter and (knspace.painter.shape_names or knspace.painter.shape_group_names) else []
                        text_autoupdate: True
                        size_hint_min_x: self.minimum_width
                        flat_color: app.theme.text_primary
                        flat_menu_color: app.theme.accent
                        flat_drop_background_color: app.theme.primary_text
                        flat_drop_text_color: app.theme.text_primary
                        flat_border_color: app.theme.divider
                    FlatImageButton:
                        scale_down_color: True
                        source: 'flat_plus.png'
                        flat_color: app.theme.accent
                        on_release: stages.add_shape_by_name(shape_spin.text)
                BoxLayout:
                    size_hint_y: None
                    height: '34dp'
                    padding: '5dp'
                    spacing: '5dp'
                    size_hint_min_x: self.minimum_width
                    FlatSpinner:
                        id: func_spin
                        values: sorted(FunctionFactory.avail_funcs.keys()) if FunctionFactory.avail_funcs else []
                        text_autoupdate: True
                        size_hint_min_x: self.minimum_width
                        flat_color: app.theme.text_primary
                        flat_menu_color: app.theme.accent
                        flat_drop_background_color: app.theme.primary_text
                        flat_drop_text_color: app.theme.text_primary
                        flat_border_color: app.theme.divider
                    FlatImageButton:
                        scale_down_color: True
                        source: 'flat_plus.png'
                        flat_color: app.theme.accent
                        on_release: stages.add_func(func_spin.text)
        ScrollView:
            bar_width: '10dp'
            scroll_type: ['bars']
            StageList:
                id: stages
                knsname: 'stages'
                orientation: 'vertical'
                spacing: '5dp'
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                touch_deselect_last: True


<StageWidget>:
    size_hint_y: None
    height: self.minimum_height
    size_hint_min_x: self.minimum_width
    orientation: 'vertical'
    more: more.__self__
    settings: settings.__self__
    settings_root: settings_root.__self__
    show_more: expand.is_open
    expand: expand
    stage_widget: stage_widget
    func_widget: func_widget
    shape_widget: shape_widget
    spacing: '5dp'
    BoxSelector:
        id: selector
        size_hint_y: None
        height: '34dp'
        size_hint_min_x: self.minimum_width
        orientation: 'horizontal'
        controller: knspace.stages
        spacing: '5dp'
        padding: '5dp'
        canvas:
            Color:
                rgba: app.theme.primary_light if not root.selected else app.theme.primary
            Rectangle:
                size: self.size
                pos: self.pos
        ExpandWidget:
            id: expand
        FlatLabel:
            text: root.stage.name if root.stage else ''
            size_hint_min_x: self.texture_size[0]
            padding: '5dp', '5dp'
            flat_color: app.theme.text_primary
            center_texture: False
        FlatImageButton:
            scale_down_color: True
            source: 'flat_delete.png'
            flat_color: app.theme.accent
            on_release: root.remove_from_parent()
        FlatImageButton:
            scale_down_color: True
            source: 'flat_dots_vertical.png'
            flat_color: app.theme.accent
            on_release:
                settings_root.open(selector)
                splitter.width = max(selector.width, splitter.width)
    FlatDropDown:
        id: settings_root
        flat_color: app.theme.primary_text
        flat_border_color: app.theme.divider
        do_scroll: False, False
        FlatSplitter:
            id: splitter
            size_hint: None, None
            height: self.minimum_height
            min_size: self.minimum_width
            sizable_from: 'left'
            flat_color: app.theme.accent
            BoxLayout:
                id: settings
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                orientation: 'vertical'
                spacing: '5dp'
                padding: '5dp'
                FlatSizedTextInput:
                    id: name_input
                    background_color: settings_root.flat_color
                    text: root.stage.name if root.stage else ''
                    on_focus: if not self.focus: self.text = StageFactory._change_stage_name(root.stage, self.text)
                BoxLayout:
                    size_hint_y: None
                    height: '34dp'
                    spacing: '5dp'
                    IconSwitchBehavior:
                        source_down: 'flat_parallel.png'
                        source_normal: 'flat_dots_horizontal.png'
                        flat_color: app.theme.accent
                        state: 'down' if root.stage and root.stage.order == 'parallel' else 'normal'
                        on_state: root.stage.order = 'parallel' if self.state == 'down' else 'serial'
                    FlatToggleButton:
                        text: 'R'
                        state: 'down' if root.stage and root.stage.color_r else 'normal'
                        on_state: root.stage.color_r = self.state == 'down'
                        scale_down_color: True
                        flat_color: app.theme.text_primary
                        flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
                    FlatToggleButton:
                        text: 'G'
                        state: 'down' if root.stage and root.stage.color_g else 'normal'
                        on_state: root.stage.color_g = self.state == 'down'
                        scale_down_color: True
                        flat_color: app.theme.text_primary
                        flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary
                    FlatToggleButton:
                        text: 'B'
                        state: 'down' if root.stage and root.stage.color_b else 'normal'
                        on_state: root.stage.color_b = self.state == 'down'
                        scale_down_color: True
                        flat_color: app.theme.text_primary
                        flat_background_color: app.theme.primary_light if self.state == 'normal' else app.theme.primary

    BoxLayout:
        id: more
        spacing: '5dp'
        size_hint_y: None
        height: self.minimum_height
        size_hint_min_x: self.minimum_width
        orientation: 'vertical'
        BoxLayout:
            id: stage_widget
            padding: '5dp', 0, 0, 0
            spacing: '5dp'
            size_hint_y: None
            height: self.minimum_height
            size_hint_min_x: self.minimum_width
            orientation: 'vertical'
            source_obj: root
            canvas:
                Color:
                    rgba: app.theme.divider
                Rectangle:
                    pos: self.x + dp(1), self.y
                    size: dp(2), self.height
        BoxLayout:
            id: func_widget
            padding: '5dp', 0, 0, 0
            spacing: '5dp'
            size_hint_y: None
            height: self.minimum_height
            size_hint_min_x: self.minimum_width
            orientation: 'vertical'
            source_obj: root
            canvas:
                Color:
                    rgba: app.theme.divider
                Rectangle:
                    pos: self.x + dp(1), self.y
                    size: dp(2), self.height
        BoxLayout:
            id: shape_widget
            padding: '5dp', 0, 0, 0
            spacing: '5dp'
            size_hint_y: None
            height: self.minimum_height
            size_hint_min_x: self.minimum_width
            orientation: 'vertical'
            source_obj: root
            canvas:
                Color:
                    rgba: app.theme.divider
                Rectangle:
                    pos: self.x + dp(1), self.y
                    size: dp(2), self.height


<StageShapeDisplay>:
    size_hint_y: None
    height: '34dp'
    size_hint_min_x: self.minimum_width
    orientation: 'horizontal'
    controller: knspace.stages
    use_parent: False
    spacing: '5dp'
    canvas:
        Color:
            rgba: app.theme.primary_light if not root.selected else app.theme.primary
        Rectangle:
            size: self.size
            pos: self.pos
    FlatLabel:
        padding: '5dp', '5dp'
        flat_color: app.theme.text_primary
        center_texture: False
        text: root.stage_shape.name if root.stage_shape else ''
        size_hint_min_x: self.texture_size[0]
    FlatImageButton:
        scale_down_color: True
        source: 'flat_delete.png'
        flat_color: app.theme.accent
        on_release: root.stage_shape.stage.remove_shape(root.stage_shape)
