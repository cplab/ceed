#:import Factory kivy.factory.Factory
#:import dp kivy.metrics.dp
#:import partial functools.partial
#:import knspace kivy.uix.behaviors.knspace.knspace

<PaddedSpinnerOption@SpinnerOption>:
    padding_x: '10dp'
    size_hint_x: None
    width: self.texture_size[0]


<VideoConfig@BlankDropDown>:
    size_hint: None, None
    width: min(grid.width, self.parent.width / 2. if self.parent else grid.width)
    height: min(grid.height, self.parent.height / 2. if self.parent else grid.height)
    do_scroll: True, True
    scroll_type: ['bars']
    bar_width: 10
    auto_width: False
    GridLayout:
        on_parent: root.container = self
        cols: 1
        size_hint: None, None
        size: self.minimum_size
        id: grid
        GridLayout:
            rows: 1
            padding: '5dp',
            spacing: ['5dp']
            size_hint: None, None
            size: self.minimum_width, '55dp'
            disabled: not knspace.player or knspace.player.pt_player_active
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'settings.png' if self.state == 'normal' else 'settings_down.png'
                on_release: knspace.player.reconfig_pt_cams()
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'refresh.png' if self.state == 'normal' else 'refresh_down.png'
                on_release: knspace.player.refresh_pt_cams()
            KNSpinner:
                knsname: 'pt_serial'
                id: pt_serial
                size_hint_x: None
                padding_x: '10dp'
                width: max(self.minimum_size[0], 25)
                on_text: knspace.player.set_pt_serial(self.text)
                option_cls: 'PaddedSpinnerOption'
            KNSpinner:
                knsname: 'pt_ip'
                id: pt_ip
                size_hint_x: None
                padding_x: '10dp'
                width: max(self.minimum_size[0], 25)
                on_text: knspace.player.set_pt_ip(self.text)
                option_cls: 'PaddedSpinnerOption'
        GridLayout:
            size_hint: 1, None
            height: self.minimum_height
            spacing: ['5dp']
            rows: 1
            disabled: not knspace.player or knspace.player.pt_player_active
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'browse.png' if self.state == 'normal' else 'browse_down.png'
                on_release:
                    app.filebrowser.target = record_path.text
                    app.filebrowser.dirselect = False
                    app.filebrowser.multiselect = False
                    app.filebrowser.callback = partial(knspace.player.set_filename_widget, record_path, is_dir=False)
                    app.filebrowser.open()
            KNSizedTextInput:
                id: record_path
                hint_text: 'Recorded filename'
                knsname: 'record_path'
                on_text: knspace.player.set_ff_play_filename(self.text)
        GridLayout:
            size_hint: 1, None
            height: self.minimum_height
            spacing: ['5dp']
            rows: 1
            disabled: not knspace.player or knspace.player.player_record_active
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'browse.png' if self.state == 'normal' else 'browse_down.png'
                on_release:
                    app.filebrowser.target = path_dir.text
                    app.filebrowser.dirselect = True
                    app.filebrowser.multiselect = False
                    app.filebrowser.callback = partial(knspace.player.set_filename_widget, path_dir)
                    app.filebrowser.open()
            KNSizedTextInput:
                id: path_dir
                hint_text: 'Directory'
                knsname: 'path_dir'
                on_text: knspace.player.update_record_path(directory=self.text)
            KNSizedTextInput:
                hint_text: 'Filename'
                id: path_fname
                knsname: 'path_fname'
                fmt_text: ''
                orig_text: ''
                on_focus: knspace.player.handle_fname(path_fname, path_count)
                on_orig_text: knspace.player.update_record_path(fname=self.orig_text)
            KNSizedTextInput:
                id: path_count
                knsname: 'path_count'
                input_filter: 'int'
                size_hint_x: None
                width: '40dp'
                hint_text: 'n'
                on_text:
                    knspace.player.handle_fname(path_fname, path_count, 'count')
                    knspace.player.update_record_path(count=self.text)

<VideoControl@BoxLayout>
    size_hint: None, None
    size: self.minimum_width, '45dp'
    spacing: '12dp'
    ImageToggleButton:
        id: play
        knsname: 'gui_play'
        size_hint_x: None
        width: self.height
        source: 'play.png' if self.state == 'normal' else 'pause.png'
        disabled: not knspace.player or knspace.player.pt_player_active and not knspace.player.pt_player_play
        on_state: knspace.player.play(live.state == 'down') if self.state == 'down' else knspace.player.stop()
    ImageToggleButton:
        knsname: 'gui_record'
        size_hint_x: None
        width: self.height
        source: 'record.png' if self.state == 'normal' else 'record_down.png'
        disabled: play.disabled or knspace.player.player_record_active and not knspace.player.player_record
        on_state: knspace.player.record() if self.state == 'down' else knspace.player.stop_recording()
    KNToggleButton:
        id: live
        knsname: 'gui_live_cam'
        size_hint_x: None
        width: self.texture_size[0]
        padding_x: '10dp'
        text: 'Live'
        state: 'down'
        disabled: not knspace.player or knspace.player.pt_player_active
    Widget:
        size_hint_x: None
        width: self.height
        canvas:
            Color:
                rgb: (1, 0, 0) if knspace.player.disk_used_percent >= .75 else (0, 1, 0)
            Ellipse:
                pos: self.pos
                size: self.size
                angle_end: knspace.player.disk_used_percent * 360.
            Line:
                circle: self.center_x, self.center_y, self.height / 2.
    Label:
        text: knspace.player.play_status
        size_hint_x: None
        width: self.texture_size[0]
        markup: True
        padding_x: '5dp'
    ImageButton:
        on_parent: self.more_widget = Factory.VideoConfig()
        size_hint_x: None
        width: self.height / 4.
        source: 'more-vert.png' if self.state == 'normal' else 'more-vert_down.png'
        on_release: self.more_widget.open(root)


<Display@BoxLayout>:
    orientation: 'vertical'
    StackLayout:  # --------------------- TOP --------------------
        size_hint: None, None
        size: self.minimum_size
        orientation: 'lr-tb'
        VideoControl
    BoxLayout:
        orientation: 'horizontal'
        canvas:
            Color:
                rgba: 1, 1, 1, 1
        BufferImage:
            knsname: 'central_display'
            do_rotation: False
            auto_bring_to_front: False
            available_size: self.parent.size
            size_hint: None, None
            size: self.image_size
    StackLayout:  # --------------------- SIDE -------------------
        size_hint: None, None
        size: self.minimum_size
        orientation: 'tb-lr'
