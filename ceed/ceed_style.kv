
<ErrorTab@ErrorIndicatorBase+TabbedPanelItem>

<MainView@FocusBehavior+BoxLayout>:
    orientation: 'vertical'
    TabbedPanel:
        do_default_tab: False
        tab_width: None
        TabbedPanelItem:
            text: 'Display'
            Display
        ErrorTab:
            knsname: 'error_indicator'
            size_hint_x: None
            width: self.height
            on_parent:
                app.error_indicator = self
                self._container = error_container
            BoxLayout:
                orientation: 'vertical'
                Label:
                    size_hint_y: None
                    padding: '15dp', '15dp'
                    height: self.texture_size[1]
                    text: 'Error log'
                ErrorLogContainer:
                    id: error_container


<Display@BoxLayout>:
    orientation: 'vertical'
    StackLayout:  # --------------------- TOP --------------------
        size_hint: None, None
        size: self.minimum_size
        orientation: 'lr-tb'
        VideoControl
        PaintBar
    BoxLayout:
        orientation: 'horizontal'
        canvas:
            Color:
                rgba: 1, 1, 1, 1
        BufferImage:
            knsname: 'central_display'
            do_rotation: False
            auto_bring_to_front: False
            available_size: self.size
            do_translation: painter.locked and not painter.select
            do_scale: painter.locked and not painter.select
            on_size: self.transform = Matrix()
            CeedPainter:
                id: painter
                knsname: 'painter'
        BoxLayout:
            size_hint_x: None
            width: self.minimum_width
            orientation: 'horizontal'
            ShapeListing
            StageListing
            FuncListing


<ExpandWidget>:
    is_selected: False
    odd: False
    size_hint_x: None
    width: 16
    canvas.before:
        Color:
            rgba: [.3, .3, .3, 1.] if self.is_selected else [1., 1., 1., .0] if self.odd else [0.5, 0.5, 0.5, 0.1]
        Rectangle:
            pos: [self.parent.x, self.y] if self.parent else [0, 0]
            size: [self.parent.width, self.height] if self.parent else [1, 1]
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            source: 'atlas://data/images/defaulttheme/tree_%s' % ('opened' if self.is_open else 'closed')
            size: 16, 16
            pos: 0, self.center_y - 8


<XYSizedLabel@Label>:
    size_hint: None, None
    size: self.texture_size

<XSizedLabel@Label>:
    size_hint_x: None
    width: self.texture_size[0]

<YSizedGridLayout@GridLayout>:
    size_hint_y: None
    height: self.minimum_height

<XYSizedGridLayout@GridLayout>:
    size_hint_y: None
    height: self.minimum_height
    size_hint_min_x: self.minimum_width
