#:import knspace kivy.uix.behaviors.knspace.knspace
#:import get_color_from_hex kivy.utils.get_color_from_hex


<PaintBar@BoxLayout>:
    size_hint: None, None
    size: self.minimum_width, '34dp'
    padding: '5dp'
    spacing: '5dp'
    FlatImageToggleButton:
        group: 'paint'
        hover_text: 'circle' if self.state == 'normal' else '[b]circle[/b]'
        scale_down_color: True
        source: 'flat_circle.png'
        flat_color: app.theme.accent
        on_state: knspace.painter.draw_mode = 'circle' if self.state == 'down' else 'none'
    FlatImageToggleButton:
        group: 'paint'
        hover_text: 'ellipse' if self.state == 'normal' else '[b]ellipse[/b]'
        scale_down_color: True
        source: 'flat_ellipse.png'
        flat_color: app.theme.accent
        on_state: knspace.painter.draw_mode = 'ellipse' if self.state == 'down' else 'none'
    FlatImageToggleButton:
        group: 'paint'
        hover_text: 'free' if self.state == 'normal' else '[b]free[/b]'
        scale_down_color: True
        source: 'flat_polyline.png'
        flat_color: app.theme.accent
        state: 'down'
        on_state: knspace.painter.draw_mode = 'freeform' if self.state == 'down' else 'none'
    FlatImageToggleButton:
        group: 'paint'
        hover_text: 'polygon' if self.state == 'normal' else '[b]polygon[/b]'
        scale_down_color: True
        source: 'flat_polygon.png'
        flat_color: app.theme.accent
        on_state: knspace.painter.draw_mode = 'polygon' if self.state == 'down' else 'none'
    FlatImageToggleButton:
        group: 'paint'
        hover_text: 'bezier' if self.state == 'normal' else '[b]bezier[/b]'
        scale_down_color: True
        source: 'flat_vector_curve.png'
        flat_color: app.theme.accent
        on_state: knspace.painter.draw_mode = 'bezier' if self.state == 'down' else 'none'
    FlatSpinner:
        values: ['Draw', 'Proj', 'Cam', 'MEA']
        text: 'Draw'
        on_text:
            knspace.painter.locked = self.text != 'Draw'
            knspace.painter.move_cam = self.text == 'Cam'
            knspace.painter.move_array = self.text == 'MEA'
        size_hint_min_x: self.minimum_width
        flat_color: app.theme.text_primary
        flat_menu_color: app.theme.accent
        flat_drop_background_color: app.theme.primary_text
        flat_drop_text_color: app.theme.text_primary
        flat_border_color: app.theme.divider


<ShapeListing@FlatSplitter>:
    size_hint_x: None
    width: '150dp'
    sizable_from: 'left'
    strip_size: '5dp'
    min_size: '15dp'
    max_size: '400dp'
    flat_color: app.theme.accent
    spacing: '5dp'
    BoxLayout:
        orientation: 'vertical'
        spacing: '5dp'
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None
            height: self.minimum_height
            padding: '5dp'
            spacing: '5dp'
            ScrollView:
                bar_width: '10dp'
                scroll_type: ['bars']
                do_scroll_y: False
                size_hint_y: None
                height: sshapes_label.texture_size[1]
                FlatLabel:
                    id: sshapes_label
                    text: 'Shapes'
                    width: max(self.texture_size[0], self.parent.width)
                    size_hint_x: None
                    padding: '5dp', '5dp'
                    flat_color: app.theme.text_primary
                    center_texture: True
            FlatSplitter:
                flat_color: app.theme.accent
                size_hint_min_x: self.minimum_width
                sizable_from: 'bottom'
                strip_size: '5dp'
                size_hint_y: None
                min_size: 0
                max_size: root.height
                height: '50dp'
                spacing: '5dp'
                ScrollView:
                    bar_width: '10dp'
                    scroll_type: ['bars']
                    ShapeGroupList:
                        id: shape_groups
                        knsname: 'shape_groups'
                        orientation: 'vertical'
                        spacing: '3dp'
                        padding: '0dp', ('10dp' if not self.children else '3dp')
                        size_hint_y: None
                        height: self.minimum_height
                        size_hint_min_x: self.minimum_width
                        multiselect: True
                        nodes_order_reversed: False
                        touch_deselect_last: True
                        spacer_props: {'size_hint_y': None, 'height': '40dp', 'size_hint_min_x': '40dp'}
                        drag_classes: ['shape', 'shape_group']
                        drag_append_end: True
        BoxLayout:
            size_hint_y: None
            height: '34dp'
            Widget
            BoxLayout:
                size_hint: None, None
                size: self.minimum_width, '34dp'
                padding: '5dp'
                spacing: '5dp'
                canvas:
                    Color:
                        rgba: app.theme.primary
                    Rectangle:
                        pos: self.pos
                        size: self.size
                FlatImageButton:
                    scale_down_color: True
                    source: 'flat_copy.png'
                    hover_text: 'duplicate shapes' if self.state == 'normal' else '[b]duplicate[/b] shapes'
                    flat_color: app.theme.accent
                    on_release: knspace.painter.duplicate_selected_shapes()
                FlatImageButton:
                    scale_down_color: True
                    source: 'flat_delete.png'
                    hover_text: 'delete shapes' if self.state == 'normal' else '[b]delete[/b] shapes'
                    flat_color: app.theme.accent
                    on_release: knspace.painter.delete_shapes()
                FlatDivider:
                    color: app.theme.divider
                FlatImageToggleButton:
                    scale_down_color: True
                    hover_text: 'multiselect' if self.state == 'normal' else '[b]multi[/b]select'
                    source: 'flat_add_to_selection.png'
                    flat_color: app.theme.accent
                    on_state:
                        knspace.shape_groups.touch_multiselect = knspace.shapes.touch_multiselect = knspace.painter.multiselect = self.state == 'down'
                FlatImageToggleButton:
                    hover_text: '[b]hide[/b] / show pos' if self.state == 'normal' else 'hide / [b]show[/b] pos'
                    source: 'flat_map.png' if self.state == 'down' else 'flat_map_off.png'
                    flat_color: app.theme.accent
                    on_state: knspace.painter.show_label = self.state == 'down'
            Widget
        ScrollView:
            bar_width: '10dp'
            scroll_type: ['bars']
            ShapeList:
                id: shapes
                knsname: 'shapes'
                orientation: 'vertical'
                spacing: '3dp'
                padding: 0, (0 if self.children else '10dp')
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                multiselect: True
                touch_deselect_last: True
                spacer_props: {'size_hint_y': None, 'height': '50dp', 'size_hint_min_x': '40dp'}
                drag_classes: ['shape']
                drag_append_end: True


<WidgetShape>:
    size_hint_y: None
    height: self.minimum_height
    size_hint_min_x: self.minimum_width
    orientation: 'vertical'
    more: more.__self__
    show_more: expand.is_open
    spacing: '5dp'
    padding: '5dp'
    flat_color: app.theme.primary_light if not root.selected else app.theme.primary
    canvas:
        Color:
            rgba: app.theme.primary_light if not root.selected else app.theme.primary
        Rectangle:
            size: self.size
            pos: self.pos
    BoxSelector:
        id: selector
        size_hint_y: None
        height: '34dp'
        size_hint_min_x: self.minimum_width
        orientation: 'horizontal'
        controller: knspace.shapes
        spacing: '5dp'
        padding: '5dp'
        selectee: root
        DraggingWidget:
            drag_widget: selector.__self__
            obj_dragged: root
            drag_cls: 'shape'
        ExpandWidget:
            id: expand
        FlatLabel:
            size_hint_min_x: self.texture_size[0]
            padding: '5dp', '5dp'
            flat_color: app.theme.text_primary
            center_texture: False
            text: root.shape.name if root.shape else ''
        FlatImageButton:
            scale_down_color: True
            source: 'flat_arrow_down_bold.png'
            flat_color: app.theme.accent
            on_release: knspace.painter.move_shape_upwards(root.shape)
        FlatImageButton:
            scale_down_color: True
            source: 'flat_arrow_up_bold.png'
            flat_color: app.theme.accent
            on_release: knspace.painter.move_shape_lower(root.shape)
        IconSwitchBehavior:
            source_down: 'flat_lock.png'
            source_normal: 'flat_unlock.png'
            flat_color: app.theme.accent
            state: 'down' if root.shape and root.shape.locked else 'normal'
            on_state: root.painter.lock_shape(root.shape) if self.state == 'down' else root.painter.unlock_shape(root.shape)
        FlatImageButton:
            scale_down_color: True
            source: 'flat_delete.png'
            flat_color: app.theme.accent
            on_release: knspace.painter.remove_shape(root.shape)
    BoxLayout:
        id: more
        spacing: '5dp'
        padding: '5dp', '5dp', 0, 0
        size_hint_y: None
        height: self.minimum_height
        size_hint_min_x: self.minimum_width
        orientation: 'vertical'
        FlatSizedTextInput:
            background_color: root.flat_color
            text: root.shape.name if root.shape else ''
            on_focus: if not self.focus: self.text = root.painter._change_shape_name(root.shape, self.text)
        BoxLayout:
            size_hint_y: None
            height: self.minimum_height
            spacing: '8dp'
            FlatSizedTextInput:
                hint_text: 'X'
                background_color: root.flat_color
                input_filter: 'int'
                text: str(int(root.centroid_x))
                on_focus:
                    if not self.focus and self.text: root._update_centroid(x=int(self.text))
                    if not self.text: self.text = str(int(root.centroid_x))
            FlatSizedTextInput:
                hint_text: 'Y'
                background_color: root.flat_color
                input_filter: 'int'
                text: str(int(root.centroid_y))
                on_focus:
                    if not self.focus and self.text: root._update_centroid(y=int(self.text))
                    if not self.text: self.text = str(int(root.centroid_y))
        FlatSizedTextInput:
            hint_text: 'Area'
            background_color: root.flat_color
            input_filter: 'float'
            text: str(float(root.area))
            on_focus:
                if not self.focus and self.text: root._update_area(float(self.text))
                if not self.text: self.text = str(float(root.area))


<BoxShapeDraggableLayoutBehavior@ShapeGroupDraggableLayoutBehavior+BoxLayout>

<WidgetShapeGroup>:
    size_hint_y: None
    height: self.minimum_height
    size_hint_min_x: self.minimum_width
    orientation: 'vertical'
    more: more.__self__
    show_more: expand.is_open
    spacing: '5dp'
    flat_color: app.theme.primary_light if not root.selected else app.theme.primary
    BoxSelector:
        id: selector
        size_hint_y: None
        height: '34dp'
        size_hint_min_x: self.minimum_width
        orientation: 'horizontal'
        controller: knspace.shape_groups
        selectee: root
        spacing: '5dp'
        padding: '5dp'
        canvas:
            Color:
                rgba: app.theme.primary_light if not root.selected else app.theme.primary
            Rectangle:
                size: self.size
                pos: self.pos
        DraggingWidget:
            drag_widget: selector.__self__
            obj_dragged: root
            drag_cls: 'shape_group'
        ExpandWidget:
            id: expand
        FlatLabel:
            text: root.group.name if root.group else ''
            size_hint_min_x: self.texture_size[0]
            padding: '5dp', '5dp'
            flat_color: app.theme.text_primary
            center_texture: False
        FlatImageButton:
            scale_down_color: True
            source: 'flat_delete.png'
            flat_color: app.theme.accent
            on_release: knspace.painter.remove_group(root.group)
    BoxShapeDraggableLayoutBehavior:
        id: more
        spacing: '5dp'
        padding: '5dp', 0, 0, 0
        size_hint_y: None
        height: self.minimum_height
        size_hint_min_x: self.minimum_width
        orientation: 'vertical'
        spacer_props: {'size_hint_y': None, 'height': '50dp', 'size_hint_min_x': '40dp'}
        drag_classes: ['shape']
        drag_append_end: True
        group_widget: root
        canvas:
            Color:
                rgba: app.theme.divider
            Rectangle:
                pos: self.x + dp(1), self.y
                size: dp(2), self.height - dp(5)
        FlatSizedTextInput:
            background_color: root.flat_color
            text: root.group.name if root.group else ''
            on_focus: if not self.focus: self.text = knspace.painter._change_shape_name(root.group, self.text)


<ShapeGroupItem>:
    size_hint_y: None
    height: '34dp'
    size_hint_min_x: self.minimum_width
    orientation: 'horizontal'
    controller: knspace.shape_groups
    use_parent: False
    spacing: '5dp'
    canvas:
        Color:
            rgba: app.theme.primary_light if not root.selected else app.theme.primary
        Rectangle:
            size: self.size
            pos: self.pos
    FlatLabel:
        padding: '5dp', '5dp'
        flat_color: app.theme.text_primary
        center_texture: False
        text: root.shape.name if root.shape is not None else ''
        size_hint_min_x: self.texture_size[0]
    FlatImageButton:
        scale_down_color: True
        source: 'flat_delete.png'
        flat_color: app.theme.accent
        on_release: root.group.group.remove_shape(root.shape)
